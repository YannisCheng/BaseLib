<?xml version="1.0" encoding="utf-8"?>
<resources>

    <!-- Base application theme. -->
    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorAccent</item>
    </style>

    <!--设置自定义toolbar主题-->
    <style name="AppTheme.NoActionBar">
        <item name="windowActionBar">false</item>
        <item name="windowNoTitle">true</item>
        <item name="actionOverflowMenuStyle">@style/OverflowMenuStyle</item>
        <item name="android:windowAnimationStyle">@style/translate_right_left</item>
    </style>

    <!--溢出[弹出]菜单样式 parent相当于继承【可以不要parent】-->
    <style name="OverflowMenuStyle" parent="@style/Widget.AppCompat.PopupMenu.Overflow">
        <!-- 是否覆盖锚点，默认为true，即盖住Toolbar -->
        <item name="overlapAnchor">false</item>
        <item name="android:dropDownWidth">wrap_content</item>
        <item name="android:paddingRight">16px</item>
        <!-- 弹出层背景颜色 -->
        <!--<item name="android:popupBackground">@color/darkturquoise</item>-->
        <!-- 弹出层垂直方向上的偏移，即在竖直方向上距离Toolbar的距离，值为负则会盖住Toolbar -->
        <!--<item name="android:dropDownVerticalOffset">50px</item>-->
        <!-- 弹出层水平方向上的偏移，即距离屏幕左边的距离，负值会导致右边出现空隙 -->
        <item name="android:dropDownHorizontalOffset">0px</item>
        <!-- 设置弹出菜单文字颜色 -->
        <!--<item name="android:textColor">@color/white</item>-->
    </style>

    <!-- 全屏 -->
    <style name="AppTheme.FullScreen">
        <item name="android:windowFullscreen">true</item>
        <item name="windowActionBar">false</item>
        <item name="windowNoTitle">true</item>
        <!--<item name="android:windowAnimationStyle">@style/translate_left_right</item>-->
    </style>

    <!--<style name="SwipeToLoadLayout">
        <item name="android:layout_width">match_parent</item>
        <item name="android:layout_height">match_parent</item>
        <item name="load_more_complete_delay_duration">50</item>
        <item name="refresh_complete_delay_duration">50</item>
        <item name="load_more_final_drag_offset">200px</item>
        <item name="refresh_final_drag_offset">200px</item>
        <item name="release_to_loading_more_scrolling_duration">1000</item>
        <item name="release_to_refreshing_scrolling_duration">1000</item>
        <item name="swipe_style">blew</item>
    </style>-->

    <style name="CustomProgressDialog" parent="@style/CustomDialog">
        <item name="android:windowBackground">@android:color/transparent</item>
        <item name="android:windowNoTitle">true</item>
    </style>

    <style name="CustomDialog" parent="@android:style/Theme.Dialog">
        <item name="android:windowFrame">@null</item>
        <item name="android:windowIsFloating">true</item>
        <item name="android:windowContentOverlay">@null</item>
        <item name="android:windowAnimationStyle">@android:style/Animation.Dialog</item>
        <item name="android:windowSoftInputMode">stateUnspecified|adjustPan</item>
    </style>

    <!-- tab 选中字体大小-->
    <style name="tab_text_size">
        <item name="android:textSize">48px</item>
    </style>

    <!--
    第一个表示新的activity创建进入效果，
    第2个表示activity还没有finish()下退出效果，
    第3个表示上一个activity返回进入效果，
    第4个表示的是activity finish()之后退出效果
    比如有两个activity A和B, A上面有个按钮可以打开B, 点击按钮后，此时A执行第二个动画（android:activityOpenExitAnimation）
    B执行第一个动画(android:activityOpenEnterAnimation)
    如此此时按下返回键,B退出，A显示，则此时A执行动画3（android:activityCloseEnterAnimation）
    B执行动画4（android:activityCloseExitAnimation）
    -->
    <style name="translate_left_right" parent="@android:style/Animation.Activity">
        <item name="android:activityOpenEnterAnimation">@anim/act_switch_translate_left2screen</item>
        <item name="android:activityOpenExitAnimation">@anim/act_switch_translate_screen2right</item>
        <item name="android:activityCloseEnterAnimation">@anim/act_switch_translate_right2screen</item>
        <item name="android:activityCloseExitAnimation">@anim/act_switch_translate_screen2left</item>
    </style>

    <!--
    第一个表示新的activity创建进入效果，
    第2个表示activity还没有finish()下退出效果，
    第3个表示上一个activity返回进入效果，
    第4个表示的是activity finish()之后退出效果
    比如有两个activity A和B, A上面有个按钮可以打开B, 点击按钮后，此时A执行第二个动画（android:activityOpenExitAnimation）
    B执行第一个动画(android:activityOpenEnterAnimation)
    如此此时按下返回键,B退出，A显示，则此时A执行动画3（android:activityCloseEnterAnimation）
    B执行动画4（android:activityCloseExitAnimation）
    -->
    <style name="fade" parent="@android:style/Animation.Activity">
        <item name="android:activityOpenEnterAnimation">@anim/act_switch_fade_in</item>
        <item name="android:activityOpenExitAnimation">@anim/act_switch_no_anim</item>
        <item name="android:activityCloseEnterAnimation">@anim/act_switch_no_anim</item>
        <item name="android:activityCloseExitAnimation">@anim/act_switch_fade_out</item>
    </style>

    <!--
    第一个表示新的activity创建进入效果，
    第2个表示activity还没有finish()下退出效果，
    第3个表示上一个activity返回进入效果，
    第4个表示的是activity finish()之后退出效果
    比如有两个activity A和B, A上面有个按钮可以打开B, 点击按钮后，此时A执行第二个动画（android:activityOpenExitAnimation）
    B执行第一个动画(android:activityOpenEnterAnimation)
    如此此时按下返回键,B退出，A显示，则此时A执行动画3（android:activityCloseEnterAnimation）
    B执行动画4（android:activityCloseExitAnimation）
    -->
    <style name="translate_right_left" parent="@android:style/Animation.Activity">
        <item name="android:activityOpenEnterAnimation">@anim/act_switch_translate_right2screen</item>
        <item name="android:activityOpenExitAnimation">@anim/act_switch_translate_screen2left</item>
        <item name="android:activityCloseEnterAnimation">@anim/act_switch_translate_left2screen</item>
        <item name="android:activityCloseExitAnimation">@anim/act_switch_translate_screen2right</item>
    </style>

    <!-- RecyclerView上拉、下拉样式-->
    <style name="SwipeToLoadLayout">
        <!--是否可以上拉、下拉刷新-->
        <item name="refresh_enabled">true</item>
        <item name="load_more_enabled">true</item>
        <!-- 宽高-->
        <item name="android:layout_width">match_parent</item>
        <item name="android:layout_height">match_parent</item>
        <!-- 上拉、下拉持续时间-->
        <item name="load_more_complete_delay_duration">50</item>
        <item name="refresh_complete_delay_duration">50</item>
        <!--上拉、下拉最大可拖动量-->
        <item name="load_more_final_drag_offset">200px</item>
        <item name="refresh_final_drag_offset">200px</item>
        <!-- 释放上拉、下拉持续的时间-->
        <item name="release_to_loading_more_scrolling_duration">1000</item>
        <item name="release_to_refreshing_scrolling_duration">1000</item>
        <!-- 设置下拉刷新与上拉加载的样式，其值为classic，above，blew或scale-->
        <item name="swipe_style">blew</item>
    </style>
</resources>
